apply plugin: 'java-library'

description = 'Neo4j Graph Data Science :: OpenGDS Procedure Facade'

group = 'org.neo4j.gds'

dependencies {
    neodeps().each {
        compileOnly(group: 'org.neo4j', name: it, version: ver.'neo4j') {
            transitive = false
        }

        testImplementation(group: 'org.neo4j', name: it, version: ver.'neo4j')
    }

    // the necessary GDS things
    implementation project(':algo')
    implementation project(':algorithms-machinery')
    implementation project(':algorithms-procedure-facade')
    implementation project(':algo-common')
    implementation project(':annotations')
    implementation project(':applications-facade')
    implementation project(':centrality-algorithms')
    implementation project(':community-algorithms')
    implementation project(':config-api')
    implementation project(':core')
    implementation project(':core-write')
    implementation project(':defaults-and-limits-configuration')
    implementation project(':executor')
    implementation project(':graph-catalog-procedure-facade')
    implementation project(':graph-schema-api')
    implementation project(':graph-store-catalog-applications')
    implementation project(':legacy-cypher-projection')
    implementation project(':logging')
    implementation project(':memory-estimation')
    implementation project(':memory-usage')
    implementation project(':metrics-api')
    implementation project(':miscellaneous-algorithms')
    implementation project(':ml-algo')
    implementation project(':ml-api')
    implementation project(':ml-core')
    implementation project(':model-catalog-api')
    implementation project(':model-catalog-applications')
    implementation project(':model-catalog-procedure-facade')
    implementation project(':native-projection')
    implementation project(':neo4j-api')
    implementation project(':node-embedding-algorithms')
    implementation project(':operations-procedure-facade')
    implementation project(':path-finding-algorithms')
    implementation project(':pipeline')
    implementation project(':progress-tracking')
    implementation project(':similarity-algorithms')
    implementation project(':string-formatting')
    implementation project(':subgraph-filtering')
    implementation project(':termination')
    implementation project(':transaction')

    compileOnly project(':pregel')

    compileOnly openGds.immutables.value
    compileOnly openGds.jetbrains.annotations

    // test infrastructure
    testCompileOnly openGds.immutables.value

    testImplementation platform(openGds.junit5bom)
    testImplementation openGds.junit5.jupiter.api
    testImplementation openGds.junit5.jupiter.params
    testImplementation openGds.mockito.junit.jupiter
    testImplementation openGds.assertj.core

    testRuntimeOnly openGds.junit5.jupiter.engine
}
