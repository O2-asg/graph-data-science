apply plugin: 'java-library'

description = 'Neo4j Graph Data Science :: GDS Native Projection'
group = 'org.neo4j.gds'

dependencies {
    annotationProcessor project(':annotations')
    annotationProcessor project(':config-generator')
    annotationProcessor openGds.immutables.builder
    annotationProcessor openGds.immutables.value
    annotationProcessor group: 'org.neo4j',       name: 'annotations', version: ver.'neo4j'

    compileOnly openGds.immutables.builder
    compileOnly openGds.immutables.value.annotations
    compileOnly openGds.jetbrains.annotations

    neodeps().each {
        compileOnly(group: 'org.neo4j', name: it, version: ver.'neo4j') {
            transitive = false
        }
    }

    implementation project(':annotations')
    implementation project(':config-api')
    implementation project(':core')
    implementation project(':core-utils')
    implementation project(':graph-schema-api')
    implementation project(':logging')
    implementation project(':memory-usage')
    implementation project(':neo4j-kernel-adapter')
    implementation project(':progress-tracking')
    implementation project(':string-formatting')
    implementation project(':transaction')
    implementation project(':termination')

    implementation openGds.jol.core
    implementation(openGds.opencypher.ccparser) {
        transitive = false
    }
    implementation openGds.hdrhistogram

    testAnnotationProcessor project(':annotations')
    testAnnotationProcessor openGds.immutables.value

    testCompileOnly openGds.immutables.value.annotations
    testCompileOnly openGds.immutables.builder
    testCompileOnly openGds.jetbrains.annotations

    testImplementation project(':executor')
    testImplementation project(':test-utils')
    testImplementation project(':proc-catalog')
    testImplementation project(':proc-community')

    testImplementation openGds.neo4j.cypher.dsl
}
